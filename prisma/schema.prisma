// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Province {
  id     Int    @id @default(autoincrement()) @map("id")
  nameEn String @unique @map("name_en")
  nameTh String @unique @map("name_th")

  Country District[]

  @@map("provinces")
}

model District {
  id             Int @id @default(autoincrement()) @map("id")
  provinceId     Int @map("province_id")
  districtNumber Int @map("district_number")

  province             Province    @relation(fields: [provinceId], references: [id])
  UserInformation      User[]
  CandidateInformation Candidate[]
  Vote                 Voting[]

  @@unique([provinceId, districtNumber])
  @@map("districts")
}

model User {
  id                 String @id @default(uuid()) @map("id")
  identityCardNumber String @map("identity_card_number")
  name               String @map("name")
  districtId         Int    @map("district_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  district District @relation(fields: [districtId], references: [id])
  Vote     Voting?

  @@map("users")
}

model Party {
  id   Int    @id @default(autoincrement()) @map("id")
  name String @map("name")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  CandidateInformation Candidate[]

  @@map("parties")
}

model Candidate {
  id         String @id @default(uuid()) @map("id")
  name       String @map("name")
  districtId Int    @map("district_id")
  partyId    Int    @map("party_id")
  no         Int    @map("no")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  district District @relation(fields: [districtId], references: [id])
  party    Party    @relation(fields: [partyId], references: [id])
  Vote     Voting[]

  @@map("candidates")
}

model Voting {
  id          String @id @default(uuid()) @map("id")
  userId      String @unique @map("user_id")
  candidateId String @map("candidate_id")
  districtId  Int    @map("district_id")

  user      User      @relation(fields: [userId], references: [id])
  candidate Candidate @relation(fields: [candidateId], references: [id])
  district  District  @relation(fields: [districtId], references: [id])

  @@map("voting")
}
